--- 
GENERATOR: 
  PackageName: hamlib
  PackageDescription: "Package hamlib provides Go bindings for Hamlib (radio control toolkit)."
  PackageLicense: "THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS."
  PkgConfigOpts: [hamlib]
  Includes: ["hamlib/rig.h"]

PARSER: 
  IncludePaths: ["/usr/include"]
  SourcesPaths: ["hamlib/rig.h"]

TRANSLATOR: 
  ConstRules:
    enum: expand
    defines: expand
  MemTips:
    - {target: "rig_caps", self: raw}
    - {target: "channel_cap", self: raw}
    - {target: "(?i)^rig", self: raw}
    - {target: "(?i)^hamlib", self: raw}
  PtrTips:
    function:
      - {target: ^rig_, tips: [ref]}
  Rules: 
    global: 
      - {transform: lower}
      - {action: accept, from: "(?i)^rig"}
      - {action: accept, from: "(?i)^hamlib"}
      - {action: replace, from: "(?i)^hamlib_"}

      # type defs without prefix, cannot accept any _t
      - {action: accept, from: "channel$"}
      - {action: accept, from: "confparams$"}
      - {action: accept, from: "value_t$"}
      - {action: accept, from: "reset_t$"}
      - {action: accept, from: "scan_t$"}
      - {action: accept, from: "chan_t$"}
      - {action: accept, from: "chan_type_t$"}
      - {action: accept, from: "freq_range_t$"}
      - {action: accept, from: "powerstat_t$"}
      - {action: accept, from: "rmode_t$"}
      - {action: accept, from: "ptt_t$"}
      - {action: accept, from: "dcd_t$"}
      - {action: accept, from: "rptr_shift_t$"}
      - {action: accept, from: "split_t$"}
      - {action: accept, from: "_cb_t$"}
      - {action: accept, from: "_op_t$"}

      - {transform: export}
    function:
      - {action: ignore, from: rig_set_debug_callback$}
      - {action: ignore, from: rig_set_debug_file$}
      - {action: ignore, from: rig_debug$}
      # for compatibility with hamlib-1.2.15.3 from brew
      - {action: ignore, from: _version$}
      - {action: ignore, from: _license$}
      - {action: ignore, from: _copyright$}
      - {action: ignore, from: _set_split_freq_mode$}
      - {action: ignore, from: _get_split_freq_mode$}
      - {action: ignore, from: _no_restore_ai$}
      # lambda func args not supported
      - {action: ignore, from: _foreach$}
    type:    
      - {action: replace, from: "_t$"}
    private:
      - {transform: unexport}
    post-global: 
      - {action: replace, from: _$}
      - {load: snakecase}
