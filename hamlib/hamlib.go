// THE AUTOGENERATED LICENSE. ALL THE RIGHTS ARE RESERVED BY ROBOTS.

// WARNING: This file has automatically been generated on Wed, 01 Feb 2017 05:13:32 MSK.
// By https://git.io/c-for-go. DO NOT EDIT.

package hamlib

/*
#cgo pkg-config: hamlib
#include "hamlib/rig.h"
#include <stdlib.h>
#include "cgo_helpers.h"
*/
import "C"
import "unsafe"

// RigInit function as declared in hamlib/rig.h:1536
func RigInit(rigModel RigModel) *Rig {
	crigModel, _ := (C.rig_model_t)(rigModel), cgoAllocsUnknown
	__ret := C.rig_init(crigModel)
	__v := *(**Rig)(unsafe.Pointer(&__ret))
	return __v
}

// RigOpen function as declared in hamlib/rig.h:1537
func RigOpen(rig *Rig) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	__ret := C.rig_open(crig)
	__v := (int32)(__ret)
	return __v
}

// RigSetFreq function as declared in hamlib/rig.h:1544
func RigSetFreq(rig *Rig, vfo int32, freq float64) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cfreq, _ := (C.freq_t)(freq), cgoAllocsUnknown
	__ret := C.rig_set_freq(crig, cvfo, cfreq)
	__v := (int32)(__ret)
	return __v
}

// RigGetFreq function as declared in hamlib/rig.h:1545
func RigGetFreq(rig *Rig, vfo int32, freq []float64) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cfreq, _ := (*C.freq_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&freq)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_freq(crig, cvfo, cfreq)
	__v := (int32)(__ret)
	return __v
}

// RigSetMode function as declared in hamlib/rig.h:1547
func RigSetMode(rig *Rig, vfo int32, mode Rmode, width int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cmode, _ := (C.rmode_t)(mode), cgoAllocsUnknown
	cwidth, _ := (C.pbwidth_t)(width), cgoAllocsUnknown
	__ret := C.rig_set_mode(crig, cvfo, cmode, cwidth)
	__v := (int32)(__ret)
	return __v
}

// RigGetMode function as declared in hamlib/rig.h:1548
func RigGetMode(rig *Rig, vfo int32, mode []Rmode, width []int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cmode, _ := (*C.rmode_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&mode)).Data)), cgoAllocsUnknown
	cwidth, _ := (*C.pbwidth_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&width)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_mode(crig, cvfo, cmode, cwidth)
	__v := (int32)(__ret)
	return __v
}

// RigSetVfo function as declared in hamlib/rig.h:1550
func RigSetVfo(rig *Rig, vfo int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	__ret := C.rig_set_vfo(crig, cvfo)
	__v := (int32)(__ret)
	return __v
}

// RigGetVfo function as declared in hamlib/rig.h:1551
func RigGetVfo(rig *Rig, vfo []int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (*C.vfo_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&vfo)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_vfo(crig, cvfo)
	__v := (int32)(__ret)
	return __v
}

// RigSetPtt function as declared in hamlib/rig.h:1553
func RigSetPtt(rig *Rig, vfo int32, ptt Ptt) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cptt, _ := (C.ptt_t)(ptt), cgoAllocsUnknown
	__ret := C.rig_set_ptt(crig, cvfo, cptt)
	__v := (int32)(__ret)
	return __v
}

// RigGetPtt function as declared in hamlib/rig.h:1554
func RigGetPtt(rig *Rig, vfo int32, ptt []Ptt) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cptt, _ := (*C.ptt_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ptt)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_ptt(crig, cvfo, cptt)
	__v := (int32)(__ret)
	return __v
}

// RigGetDcd function as declared in hamlib/rig.h:1556
func RigGetDcd(rig *Rig, vfo int32, dcd []Dcd) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cdcd, _ := (*C.dcd_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&dcd)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_dcd(crig, cvfo, cdcd)
	__v := (int32)(__ret)
	return __v
}

// RigSetRptrShift function as declared in hamlib/rig.h:1558
func RigSetRptrShift(rig *Rig, vfo int32, rptrShift RptrShift) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	crptrShift, _ := (C.rptr_shift_t)(rptrShift), cgoAllocsUnknown
	__ret := C.rig_set_rptr_shift(crig, cvfo, crptrShift)
	__v := (int32)(__ret)
	return __v
}

// RigGetRptrShift function as declared in hamlib/rig.h:1559
func RigGetRptrShift(rig *Rig, vfo int32, rptrShift []RptrShift) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	crptrShift, _ := (*C.rptr_shift_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&rptrShift)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_rptr_shift(crig, cvfo, crptrShift)
	__v := (int32)(__ret)
	return __v
}

// RigSetRptrOffs function as declared in hamlib/rig.h:1560
func RigSetRptrOffs(rig *Rig, vfo int32, rptrOffs int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	crptrOffs, _ := (C.shortfreq_t)(rptrOffs), cgoAllocsUnknown
	__ret := C.rig_set_rptr_offs(crig, cvfo, crptrOffs)
	__v := (int32)(__ret)
	return __v
}

// RigGetRptrOffs function as declared in hamlib/rig.h:1561
func RigGetRptrOffs(rig *Rig, vfo int32, rptrOffs []int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	crptrOffs, _ := (*C.shortfreq_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&rptrOffs)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_rptr_offs(crig, cvfo, crptrOffs)
	__v := (int32)(__ret)
	return __v
}

// RigSetCtcssTone function as declared in hamlib/rig.h:1563
func RigSetCtcssTone(rig *Rig, vfo int32, tone uint32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ctone, _ := (C.tone_t)(tone), cgoAllocsUnknown
	__ret := C.rig_set_ctcss_tone(crig, cvfo, ctone)
	__v := (int32)(__ret)
	return __v
}

// RigGetCtcssTone function as declared in hamlib/rig.h:1564
func RigGetCtcssTone(rig *Rig, vfo int32, tone []uint32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ctone, _ := (*C.tone_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&tone)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_ctcss_tone(crig, cvfo, ctone)
	__v := (int32)(__ret)
	return __v
}

// RigSetDcsCode function as declared in hamlib/rig.h:1565
func RigSetDcsCode(rig *Rig, vfo int32, code uint32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ccode, _ := (C.tone_t)(code), cgoAllocsUnknown
	__ret := C.rig_set_dcs_code(crig, cvfo, ccode)
	__v := (int32)(__ret)
	return __v
}

// RigGetDcsCode function as declared in hamlib/rig.h:1566
func RigGetDcsCode(rig *Rig, vfo int32, code []uint32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ccode, _ := (*C.tone_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&code)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_dcs_code(crig, cvfo, ccode)
	__v := (int32)(__ret)
	return __v
}

// RigSetCtcssSql function as declared in hamlib/rig.h:1568
func RigSetCtcssSql(rig *Rig, vfo int32, tone uint32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ctone, _ := (C.tone_t)(tone), cgoAllocsUnknown
	__ret := C.rig_set_ctcss_sql(crig, cvfo, ctone)
	__v := (int32)(__ret)
	return __v
}

// RigGetCtcssSql function as declared in hamlib/rig.h:1569
func RigGetCtcssSql(rig *Rig, vfo int32, tone []uint32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ctone, _ := (*C.tone_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&tone)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_ctcss_sql(crig, cvfo, ctone)
	__v := (int32)(__ret)
	return __v
}

// RigSetDcsSql function as declared in hamlib/rig.h:1570
func RigSetDcsSql(rig *Rig, vfo int32, code uint32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ccode, _ := (C.tone_t)(code), cgoAllocsUnknown
	__ret := C.rig_set_dcs_sql(crig, cvfo, ccode)
	__v := (int32)(__ret)
	return __v
}

// RigGetDcsSql function as declared in hamlib/rig.h:1571
func RigGetDcsSql(rig *Rig, vfo int32, code []uint32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ccode, _ := (*C.tone_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&code)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_dcs_sql(crig, cvfo, ccode)
	__v := (int32)(__ret)
	return __v
}

// RigSetSplitFreq function as declared in hamlib/rig.h:1573
func RigSetSplitFreq(rig *Rig, vfo int32, txFreq float64) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ctxFreq, _ := (C.freq_t)(txFreq), cgoAllocsUnknown
	__ret := C.rig_set_split_freq(crig, cvfo, ctxFreq)
	__v := (int32)(__ret)
	return __v
}

// RigGetSplitFreq function as declared in hamlib/rig.h:1574
func RigGetSplitFreq(rig *Rig, vfo int32, txFreq []float64) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ctxFreq, _ := (*C.freq_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&txFreq)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_split_freq(crig, cvfo, ctxFreq)
	__v := (int32)(__ret)
	return __v
}

// RigSetSplitMode function as declared in hamlib/rig.h:1575
func RigSetSplitMode(rig *Rig, vfo int32, txMode Rmode, txWidth int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ctxMode, _ := (C.rmode_t)(txMode), cgoAllocsUnknown
	ctxWidth, _ := (C.pbwidth_t)(txWidth), cgoAllocsUnknown
	__ret := C.rig_set_split_mode(crig, cvfo, ctxMode, ctxWidth)
	__v := (int32)(__ret)
	return __v
}

// RigGetSplitMode function as declared in hamlib/rig.h:1576
func RigGetSplitMode(rig *Rig, vfo int32, txMode []Rmode, txWidth []int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ctxMode, _ := (*C.rmode_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&txMode)).Data)), cgoAllocsUnknown
	ctxWidth, _ := (*C.pbwidth_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&txWidth)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_split_mode(crig, cvfo, ctxMode, ctxWidth)
	__v := (int32)(__ret)
	return __v
}

// RigSetSplitVfo function as declared in hamlib/rig.h:1579
func RigSetSplitVfo(arg0 *Rig, rxVfo int32, split Split, txVfo int32) int32 {
	carg0, _ := (*C.RIG)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	crxVfo, _ := (C.vfo_t)(rxVfo), cgoAllocsUnknown
	csplit, _ := (C.split_t)(split), cgoAllocsUnknown
	ctxVfo, _ := (C.vfo_t)(txVfo), cgoAllocsUnknown
	__ret := C.rig_set_split_vfo(carg0, crxVfo, csplit, ctxVfo)
	__v := (int32)(__ret)
	return __v
}

// RigGetSplitVfo function as declared in hamlib/rig.h:1580
func RigGetSplitVfo(arg0 *Rig, rxVfo int32, split []Split, txVfo []int32) int32 {
	carg0, _ := (*C.RIG)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	crxVfo, _ := (C.vfo_t)(rxVfo), cgoAllocsUnknown
	csplit, _ := (*C.split_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&split)).Data)), cgoAllocsUnknown
	ctxVfo, _ := (*C.vfo_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&txVfo)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_split_vfo(carg0, crxVfo, csplit, ctxVfo)
	__v := (int32)(__ret)
	return __v
}

// RigSetRit function as declared in hamlib/rig.h:1584
func RigSetRit(rig *Rig, vfo int32, rit int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	crit, _ := (C.shortfreq_t)(rit), cgoAllocsUnknown
	__ret := C.rig_set_rit(crig, cvfo, crit)
	__v := (int32)(__ret)
	return __v
}

// RigGetRit function as declared in hamlib/rig.h:1585
func RigGetRit(rig *Rig, vfo int32, rit []int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	crit, _ := (*C.shortfreq_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&rit)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_rit(crig, cvfo, crit)
	__v := (int32)(__ret)
	return __v
}

// RigSetXit function as declared in hamlib/rig.h:1586
func RigSetXit(rig *Rig, vfo int32, xit int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cxit, _ := (C.shortfreq_t)(xit), cgoAllocsUnknown
	__ret := C.rig_set_xit(crig, cvfo, cxit)
	__v := (int32)(__ret)
	return __v
}

// RigGetXit function as declared in hamlib/rig.h:1587
func RigGetXit(rig *Rig, vfo int32, xit []int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cxit, _ := (*C.shortfreq_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&xit)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_xit(crig, cvfo, cxit)
	__v := (int32)(__ret)
	return __v
}

// RigSetTs function as declared in hamlib/rig.h:1589
func RigSetTs(rig *Rig, vfo int32, ts int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cts, _ := (C.shortfreq_t)(ts), cgoAllocsUnknown
	__ret := C.rig_set_ts(crig, cvfo, cts)
	__v := (int32)(__ret)
	return __v
}

// RigGetTs function as declared in hamlib/rig.h:1590
func RigGetTs(rig *Rig, vfo int32, ts []int) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cts, _ := (*C.shortfreq_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ts)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_ts(crig, cvfo, cts)
	__v := (int32)(__ret)
	return __v
}

// RigPower2mw function as declared in hamlib/rig.h:1592
func RigPower2mw(rig *Rig, mwpower []uint32, power float32, freq float64, mode Rmode) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cmwpower, _ := (*C.uint)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&mwpower)).Data)), cgoAllocsUnknown
	cpower, _ := (C.float)(power), cgoAllocsUnknown
	cfreq, _ := (C.freq_t)(freq), cgoAllocsUnknown
	cmode, _ := (C.rmode_t)(mode), cgoAllocsUnknown
	__ret := C.rig_power2mW(crig, cmwpower, cpower, cfreq, cmode)
	__v := (int32)(__ret)
	return __v
}

// RigMw2power function as declared in hamlib/rig.h:1593
func RigMw2power(rig *Rig, power []float32, mwpower uint32, freq float64, mode Rmode) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cpower, _ := (*C.float)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&power)).Data)), cgoAllocsUnknown
	cmwpower, _ := (C.uint)(mwpower), cgoAllocsUnknown
	cfreq, _ := (C.freq_t)(freq), cgoAllocsUnknown
	cmode, _ := (C.rmode_t)(mode), cgoAllocsUnknown
	__ret := C.rig_mW2power(crig, cpower, cmwpower, cfreq, cmode)
	__v := (int32)(__ret)
	return __v
}

// RigGetResolution function as declared in hamlib/rig.h:1595
func RigGetResolution(rig *Rig, mode Rmode) int {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cmode, _ := (C.rmode_t)(mode), cgoAllocsUnknown
	__ret := C.rig_get_resolution(crig, cmode)
	__v := (int)(__ret)
	return __v
}

// RigSetLevel function as declared in hamlib/rig.h:1597
func RigSetLevel(rig *Rig, vfo int32, level uint, val Value) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	clevel, _ := (C.setting_t)(level), cgoAllocsUnknown
	cval, _ := *(*C.value_t)(unsafe.Pointer(&val)), cgoAllocsUnknown
	__ret := C.rig_set_level(crig, cvfo, clevel, cval)
	__v := (int32)(__ret)
	return __v
}

// RigGetLevel function as declared in hamlib/rig.h:1598
func RigGetLevel(rig *Rig, vfo int32, level uint, val []Value) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	clevel, _ := (C.setting_t)(level), cgoAllocsUnknown
	cval, _ := (*C.value_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&val)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_level(crig, cvfo, clevel, cval)
	__v := (int32)(__ret)
	return __v
}

// RigSetParm function as declared in hamlib/rig.h:1602
func RigSetParm(rig *Rig, parm uint, val Value) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cparm, _ := (C.setting_t)(parm), cgoAllocsUnknown
	cval, _ := *(*C.value_t)(unsafe.Pointer(&val)), cgoAllocsUnknown
	__ret := C.rig_set_parm(crig, cparm, cval)
	__v := (int32)(__ret)
	return __v
}

// RigGetParm function as declared in hamlib/rig.h:1603
func RigGetParm(rig *Rig, parm uint, val []Value) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cparm, _ := (C.setting_t)(parm), cgoAllocsUnknown
	cval, _ := (*C.value_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&val)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_parm(crig, cparm, cval)
	__v := (int32)(__ret)
	return __v
}

// RigSetConf function as declared in hamlib/rig.h:1605
func RigSetConf(rig *Rig, token int, val string) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	ctoken, _ := (C.token_t)(token), cgoAllocsUnknown
	cval, _ := unpackPCharString(val)
	__ret := C.rig_set_conf(crig, ctoken, cval)
	__v := (int32)(__ret)
	return __v
}

// RigGetConf function as declared in hamlib/rig.h:1606
func RigGetConf(rig *Rig, token int, val []byte) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	ctoken, _ := (C.token_t)(token), cgoAllocsUnknown
	cval, _ := (*C.char)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&val)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_conf(crig, ctoken, cval)
	__v := (int32)(__ret)
	return __v
}

// RigSetPowerstat function as declared in hamlib/rig.h:1608
func RigSetPowerstat(rig *Rig, status Powerstat) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cstatus, _ := (C.powerstat_t)(status), cgoAllocsUnknown
	__ret := C.rig_set_powerstat(crig, cstatus)
	__v := (int32)(__ret)
	return __v
}

// RigGetPowerstat function as declared in hamlib/rig.h:1609
func RigGetPowerstat(rig *Rig, status []Powerstat) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cstatus, _ := (*C.powerstat_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&status)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_powerstat(crig, cstatus)
	__v := (int32)(__ret)
	return __v
}

// RigReset function as declared in hamlib/rig.h:1611
func RigReset(rig *Rig, reset Reset) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	creset, _ := (C.reset_t)(reset), cgoAllocsUnknown
	__ret := C.rig_reset(crig, creset)
	__v := (int32)(__ret)
	return __v
}

// RigSetExtLevel function as declared in hamlib/rig.h:1613
func RigSetExtLevel(rig *Rig, vfo int32, token int, val Value) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ctoken, _ := (C.token_t)(token), cgoAllocsUnknown
	cval, _ := *(*C.value_t)(unsafe.Pointer(&val)), cgoAllocsUnknown
	__ret := C.rig_set_ext_level(crig, cvfo, ctoken, cval)
	__v := (int32)(__ret)
	return __v
}

// RigGetExtLevel function as declared in hamlib/rig.h:1615
func RigGetExtLevel(rig *Rig, vfo int32, token int, val []Value) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	ctoken, _ := (C.token_t)(token), cgoAllocsUnknown
	cval, _ := (*C.value_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&val)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_ext_level(crig, cvfo, ctoken, cval)
	__v := (int32)(__ret)
	return __v
}

// RigSetExtParm function as declared in hamlib/rig.h:1618
func RigSetExtParm(rig *Rig, token int, val Value) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	ctoken, _ := (C.token_t)(token), cgoAllocsUnknown
	cval, _ := *(*C.value_t)(unsafe.Pointer(&val)), cgoAllocsUnknown
	__ret := C.rig_set_ext_parm(crig, ctoken, cval)
	__v := (int32)(__ret)
	return __v
}

// RigGetExtParm function as declared in hamlib/rig.h:1619
func RigGetExtParm(rig *Rig, token int, val []Value) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	ctoken, _ := (C.token_t)(token), cgoAllocsUnknown
	cval, _ := (*C.value_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&val)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_ext_parm(crig, ctoken, cval)
	__v := (int32)(__ret)
	return __v
}

// RigExtLookup function as declared in hamlib/rig.h:1623
func RigExtLookup(rig *Rig, name string) *Confparams {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cname, _ := unpackPCharString(name)
	__ret := C.rig_ext_lookup(crig, cname)
	__v := *(**Confparams)(unsafe.Pointer(&__ret))
	return __v
}

// RigExtLookupTok function as declared in hamlib/rig.h:1624
func RigExtLookupTok(rig *Rig, token int) *Confparams {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	ctoken, _ := (C.token_t)(token), cgoAllocsUnknown
	__ret := C.rig_ext_lookup_tok(crig, ctoken)
	__v := *(**Confparams)(unsafe.Pointer(&__ret))
	return __v
}

// RigExtTokenLookup function as declared in hamlib/rig.h:1625
func RigExtTokenLookup(rig *Rig, name string) int {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cname, _ := unpackPCharString(name)
	__ret := C.rig_ext_token_lookup(crig, cname)
	__v := (int)(__ret)
	return __v
}

// RigConfparamLookup function as declared in hamlib/rig.h:1629
func RigConfparamLookup(rig *Rig, name string) *Confparams {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cname, _ := unpackPCharString(name)
	__ret := C.rig_confparam_lookup(crig, cname)
	__v := *(**Confparams)(unsafe.Pointer(&__ret))
	return __v
}

// RigTokenLookup function as declared in hamlib/rig.h:1630
func RigTokenLookup(rig *Rig, name string) int {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cname, _ := unpackPCharString(name)
	__ret := C.rig_token_lookup(crig, cname)
	__v := (int)(__ret)
	return __v
}

// RigClose function as declared in hamlib/rig.h:1632
func RigClose(rig *Rig) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	__ret := C.rig_close(crig)
	__v := (int32)(__ret)
	return __v
}

// RigCleanup function as declared in hamlib/rig.h:1633
func RigCleanup(rig *Rig) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	__ret := C.rig_cleanup(crig)
	__v := (int32)(__ret)
	return __v
}

// RigSetAnt function as declared in hamlib/rig.h:1635
func RigSetAnt(rig *Rig, vfo int32, ant int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cant, _ := (C.ant_t)(ant), cgoAllocsUnknown
	__ret := C.rig_set_ant(crig, cvfo, cant)
	__v := (int32)(__ret)
	return __v
}

// RigGetAnt function as declared in hamlib/rig.h:1636
func RigGetAnt(rig *Rig, vfo int32, ant []int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cant, _ := (*C.ant_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ant)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_ant(crig, cvfo, cant)
	__v := (int32)(__ret)
	return __v
}

// RigHasGetLevel function as declared in hamlib/rig.h:1638
func RigHasGetLevel(rig *Rig, level uint) uint {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	clevel, _ := (C.setting_t)(level), cgoAllocsUnknown
	__ret := C.rig_has_get_level(crig, clevel)
	__v := (uint)(__ret)
	return __v
}

// RigHasSetLevel function as declared in hamlib/rig.h:1639
func RigHasSetLevel(rig *Rig, level uint) uint {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	clevel, _ := (C.setting_t)(level), cgoAllocsUnknown
	__ret := C.rig_has_set_level(crig, clevel)
	__v := (uint)(__ret)
	return __v
}

// RigHasGetParm function as declared in hamlib/rig.h:1641
func RigHasGetParm(rig *Rig, parm uint) uint {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cparm, _ := (C.setting_t)(parm), cgoAllocsUnknown
	__ret := C.rig_has_get_parm(crig, cparm)
	__v := (uint)(__ret)
	return __v
}

// RigHasSetParm function as declared in hamlib/rig.h:1642
func RigHasSetParm(rig *Rig, parm uint) uint {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cparm, _ := (C.setting_t)(parm), cgoAllocsUnknown
	__ret := C.rig_has_set_parm(crig, cparm)
	__v := (uint)(__ret)
	return __v
}

// RigHasGetFunc function as declared in hamlib/rig.h:1644
func RigHasGetFunc(rig *Rig, _func uint) uint {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	c_func, _ := (C.setting_t)(_func), cgoAllocsUnknown
	__ret := C.rig_has_get_func(crig, c_func)
	__v := (uint)(__ret)
	return __v
}

// RigHasSetFunc function as declared in hamlib/rig.h:1645
func RigHasSetFunc(rig *Rig, _func uint) uint {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	c_func, _ := (C.setting_t)(_func), cgoAllocsUnknown
	__ret := C.rig_has_set_func(crig, c_func)
	__v := (uint)(__ret)
	return __v
}

// RigSetFunc function as declared in hamlib/rig.h:1647
func RigSetFunc(rig *Rig, vfo int32, _func uint, status int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	c_func, _ := (C.setting_t)(_func), cgoAllocsUnknown
	cstatus, _ := (C.int)(status), cgoAllocsUnknown
	__ret := C.rig_set_func(crig, cvfo, c_func, cstatus)
	__v := (int32)(__ret)
	return __v
}

// RigGetFunc function as declared in hamlib/rig.h:1648
func RigGetFunc(rig *Rig, vfo int32, _func uint, status []int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	c_func, _ := (C.setting_t)(_func), cgoAllocsUnknown
	cstatus, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&status)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_func(crig, cvfo, c_func, cstatus)
	__v := (int32)(__ret)
	return __v
}

// RigSendDtmf function as declared in hamlib/rig.h:1650
func RigSendDtmf(rig *Rig, vfo int32, digits string) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cdigits, _ := unpackPCharString(digits)
	__ret := C.rig_send_dtmf(crig, cvfo, cdigits)
	__v := (int32)(__ret)
	return __v
}

// RigRecvDtmf function as declared in hamlib/rig.h:1651
func RigRecvDtmf(rig *Rig, vfo int32, digits []byte, length []int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cdigits, _ := (*C.char)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&digits)).Data)), cgoAllocsUnknown
	clength, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&length)).Data)), cgoAllocsUnknown
	__ret := C.rig_recv_dtmf(crig, cvfo, cdigits, clength)
	__v := (int32)(__ret)
	return __v
}

// RigSendMorse function as declared in hamlib/rig.h:1652
func RigSendMorse(rig *Rig, vfo int32, msg string) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cmsg, _ := unpackPCharString(msg)
	__ret := C.rig_send_morse(crig, cvfo, cmsg)
	__v := (int32)(__ret)
	return __v
}

// RigSetBank function as declared in hamlib/rig.h:1654
func RigSetBank(rig *Rig, vfo int32, bank int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cbank, _ := (C.int)(bank), cgoAllocsUnknown
	__ret := C.rig_set_bank(crig, cvfo, cbank)
	__v := (int32)(__ret)
	return __v
}

// RigSetMem function as declared in hamlib/rig.h:1655
func RigSetMem(rig *Rig, vfo int32, ch int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cch, _ := (C.int)(ch), cgoAllocsUnknown
	__ret := C.rig_set_mem(crig, cvfo, cch)
	__v := (int32)(__ret)
	return __v
}

// RigGetMem function as declared in hamlib/rig.h:1656
func RigGetMem(rig *Rig, vfo int32, ch []int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cch, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&ch)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_mem(crig, cvfo, cch)
	__v := (int32)(__ret)
	return __v
}

// RigVfoOp function as declared in hamlib/rig.h:1657
func RigVfoOp(rig *Rig, vfo int32, op VfoOp) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cop, _ := (C.vfo_op_t)(op), cgoAllocsUnknown
	__ret := C.rig_vfo_op(crig, cvfo, cop)
	__v := (int32)(__ret)
	return __v
}

// RigHasVfoOp function as declared in hamlib/rig.h:1658
func RigHasVfoOp(rig *Rig, op VfoOp) VfoOp {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cop, _ := (C.vfo_op_t)(op), cgoAllocsUnknown
	__ret := C.rig_has_vfo_op(crig, cop)
	__v := (VfoOp)(__ret)
	return __v
}

// RigScan function as declared in hamlib/rig.h:1659
func RigScan(rig *Rig, vfo int32, scan Scan, ch int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	cscan, _ := (C.scan_t)(scan), cgoAllocsUnknown
	cch, _ := (C.int)(ch), cgoAllocsUnknown
	__ret := C.rig_scan(crig, cvfo, cscan, cch)
	__v := (int32)(__ret)
	return __v
}

// RigHasScan function as declared in hamlib/rig.h:1660
func RigHasScan(rig *Rig, scan Scan) Scan {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cscan, _ := (C.scan_t)(scan), cgoAllocsUnknown
	__ret := C.rig_has_scan(crig, cscan)
	__v := (Scan)(__ret)
	return __v
}

// RigSetChannel function as declared in hamlib/rig.h:1662
func RigSetChannel(rig *Rig, _chan []Channel) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	c_chan, _ := unpackArgSChannel(_chan)
	__ret := C.rig_set_channel(crig, c_chan)
	packSChannel(_chan, c_chan)
	__v := (int32)(__ret)
	return __v
}

// RigGetChannel function as declared in hamlib/rig.h:1663
func RigGetChannel(rig *Rig, _chan []Channel) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	c_chan, _ := unpackArgSChannel(_chan)
	__ret := C.rig_get_channel(crig, c_chan)
	packSChannel(_chan, c_chan)
	__v := (int32)(__ret)
	return __v
}

// RigSetChanAll function as declared in hamlib/rig.h:1665
func RigSetChanAll(rig *Rig, chans []Channel) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cchans, _ := unpackArgSChannel(chans)
	__ret := C.rig_set_chan_all(crig, cchans)
	packSChannel(chans, cchans)
	__v := (int32)(__ret)
	return __v
}

// RigGetChanAll function as declared in hamlib/rig.h:1666
func RigGetChanAll(rig *Rig, chans []Channel) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cchans, _ := unpackArgSChannel(chans)
	__ret := C.rig_get_chan_all(crig, cchans)
	packSChannel(chans, cchans)
	__v := (int32)(__ret)
	return __v
}

// RigSetChanAllCb function as declared in hamlib/rig.h:1667
func RigSetChanAllCb(rig *Rig, chanCb ChanCb, arg2 unsafe.Pointer) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cchanCb, _ := chanCb.PassValue()
	carg2, _ := (unsafe.Pointer)(unsafe.Pointer(arg2)), cgoAllocsUnknown
	__ret := C.rig_set_chan_all_cb(crig, cchanCb, carg2)
	__v := (int32)(__ret)
	return __v
}

// RigGetChanAllCb function as declared in hamlib/rig.h:1668
func RigGetChanAllCb(rig *Rig, chanCb ChanCb, arg2 unsafe.Pointer) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cchanCb, _ := chanCb.PassValue()
	carg2, _ := (unsafe.Pointer)(unsafe.Pointer(arg2)), cgoAllocsUnknown
	__ret := C.rig_get_chan_all_cb(crig, cchanCb, carg2)
	__v := (int32)(__ret)
	return __v
}

// RigSetMemAllCb function as declared in hamlib/rig.h:1670
func RigSetMemAllCb(rig *Rig, chanCb ChanCb, parmCb ConfvalCb, arg3 unsafe.Pointer) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cchanCb, _ := chanCb.PassValue()
	cparmCb, _ := parmCb.PassValue()
	carg3, _ := (unsafe.Pointer)(unsafe.Pointer(arg3)), cgoAllocsUnknown
	__ret := C.rig_set_mem_all_cb(crig, cchanCb, cparmCb, carg3)
	__v := (int32)(__ret)
	return __v
}

// RigGetMemAllCb function as declared in hamlib/rig.h:1671
func RigGetMemAllCb(rig *Rig, chanCb ChanCb, parmCb ConfvalCb, arg3 unsafe.Pointer) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cchanCb, _ := chanCb.PassValue()
	cparmCb, _ := parmCb.PassValue()
	carg3, _ := (unsafe.Pointer)(unsafe.Pointer(arg3)), cgoAllocsUnknown
	__ret := C.rig_get_mem_all_cb(crig, cchanCb, cparmCb, carg3)
	__v := (int32)(__ret)
	return __v
}

// RigSetMemAll function as declared in hamlib/rig.h:1672
func RigSetMemAll(rig *Rig, _chan []Channel, arg2 []Confparams, arg3 []Value) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	c_chan, _ := unpackArgSChannel(_chan)
	carg2, _ := unpackArgSConfparams(arg2)
	carg3, _ := (*C.value_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&arg3)).Data)), cgoAllocsUnknown
	__ret := C.rig_set_mem_all(crig, c_chan, carg2, carg3)
	packSConfparams(arg2, carg2)
	packSChannel(_chan, c_chan)
	__v := (int32)(__ret)
	return __v
}

// RigGetMemAll function as declared in hamlib/rig.h:1673
func RigGetMemAll(rig *Rig, _chan []Channel, arg2 []Confparams, arg3 []Value) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	c_chan, _ := unpackArgSChannel(_chan)
	carg2, _ := unpackArgSConfparams(arg2)
	carg3, _ := (*C.value_t)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&arg3)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_mem_all(crig, c_chan, carg2, carg3)
	packSConfparams(arg2, carg2)
	packSChannel(_chan, c_chan)
	__v := (int32)(__ret)
	return __v
}

// RigLookupMemCaps function as declared in hamlib/rig.h:1674
func RigLookupMemCaps(rig *Rig, ch int32) *Chan {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cch, _ := (C.int)(ch), cgoAllocsUnknown
	__ret := C.rig_lookup_mem_caps(crig, cch)
	__v := *(**Chan)(unsafe.Pointer(&__ret))
	return __v
}

// RigMemCount function as declared in hamlib/rig.h:1675
func RigMemCount(rig *Rig) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	__ret := C.rig_mem_count(crig)
	__v := (int32)(__ret)
	return __v
}

// RigSetTrn function as declared in hamlib/rig.h:1678
func RigSetTrn(rig *Rig, trn int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	ctrn, _ := (C.int)(trn), cgoAllocsUnknown
	__ret := C.rig_set_trn(crig, ctrn)
	__v := (int32)(__ret)
	return __v
}

// RigGetTrn function as declared in hamlib/rig.h:1679
func RigGetTrn(rig *Rig, trn []int32) int32 {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	ctrn, _ := (*C.int)(unsafe.Pointer((*sliceHeader)(unsafe.Pointer(&trn)).Data)), cgoAllocsUnknown
	__ret := C.rig_get_trn(crig, ctrn)
	__v := (int32)(__ret)
	return __v
}

// RigSetFreqCallback function as declared in hamlib/rig.h:1680
func RigSetFreqCallback(arg0 *Rig, arg1 FreqCb, arg2 unsafe.Pointer) int32 {
	carg0, _ := (*C.RIG)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := arg1.PassValue()
	carg2, _ := (unsafe.Pointer)(unsafe.Pointer(arg2)), cgoAllocsUnknown
	__ret := C.rig_set_freq_callback(carg0, carg1, carg2)
	__v := (int32)(__ret)
	return __v
}

// RigSetModeCallback function as declared in hamlib/rig.h:1681
func RigSetModeCallback(arg0 *Rig, arg1 ModeCb, arg2 unsafe.Pointer) int32 {
	carg0, _ := (*C.RIG)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := arg1.PassValue()
	carg2, _ := (unsafe.Pointer)(unsafe.Pointer(arg2)), cgoAllocsUnknown
	__ret := C.rig_set_mode_callback(carg0, carg1, carg2)
	__v := (int32)(__ret)
	return __v
}

// RigSetVfoCallback function as declared in hamlib/rig.h:1682
func RigSetVfoCallback(arg0 *Rig, arg1 VfoCb, arg2 unsafe.Pointer) int32 {
	carg0, _ := (*C.RIG)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := arg1.PassValue()
	carg2, _ := (unsafe.Pointer)(unsafe.Pointer(arg2)), cgoAllocsUnknown
	__ret := C.rig_set_vfo_callback(carg0, carg1, carg2)
	__v := (int32)(__ret)
	return __v
}

// RigSetPttCallback function as declared in hamlib/rig.h:1683
func RigSetPttCallback(arg0 *Rig, arg1 PttCb, arg2 unsafe.Pointer) int32 {
	carg0, _ := (*C.RIG)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := arg1.PassValue()
	carg2, _ := (unsafe.Pointer)(unsafe.Pointer(arg2)), cgoAllocsUnknown
	__ret := C.rig_set_ptt_callback(carg0, carg1, carg2)
	__v := (int32)(__ret)
	return __v
}

// RigSetDcdCallback function as declared in hamlib/rig.h:1684
func RigSetDcdCallback(arg0 *Rig, arg1 DcdCb, arg2 unsafe.Pointer) int32 {
	carg0, _ := (*C.RIG)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := arg1.PassValue()
	carg2, _ := (unsafe.Pointer)(unsafe.Pointer(arg2)), cgoAllocsUnknown
	__ret := C.rig_set_dcd_callback(carg0, carg1, carg2)
	__v := (int32)(__ret)
	return __v
}

// RigSetPltuneCallback function as declared in hamlib/rig.h:1685
func RigSetPltuneCallback(arg0 *Rig, arg1 PltuneCb, arg2 unsafe.Pointer) int32 {
	carg0, _ := (*C.RIG)(unsafe.Pointer(arg0)), cgoAllocsUnknown
	carg1, _ := arg1.PassValue()
	carg2, _ := (unsafe.Pointer)(unsafe.Pointer(arg2)), cgoAllocsUnknown
	__ret := C.rig_set_pltune_callback(carg0, carg1, carg2)
	__v := (int32)(__ret)
	return __v
}

// RigGetInfo function as declared in hamlib/rig.h:1687
func RigGetInfo(rig *Rig) string {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	__ret := C.rig_get_info(crig)
	__v := packPCharString(__ret)
	return __v
}

// RigGetCaps function as declared in hamlib/rig.h:1689
func RigGetCaps(rigModel RigModel) *RigCaps {
	crigModel, _ := (C.rig_model_t)(rigModel), cgoAllocsUnknown
	__ret := C.rig_get_caps(crigModel)
	__v := *(**RigCaps)(unsafe.Pointer(&__ret))
	return __v
}

// RigGetRange function as declared in hamlib/rig.h:1690
func RigGetRange(rangeList *FreqRange, freq float64, mode Rmode) *FreqRange {
	crangeList, _ := rangeList.PassRef()
	cfreq, _ := (C.freq_t)(freq), cgoAllocsUnknown
	cmode, _ := (C.rmode_t)(mode), cgoAllocsUnknown
	__ret := C.rig_get_range(crangeList, cfreq, cmode)
	__v := *(**FreqRange)(unsafe.Pointer(&__ret))
	return __v
}

// RigPassbandNormal function as declared in hamlib/rig.h:1692
func RigPassbandNormal(rig *Rig, mode Rmode) int {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cmode, _ := (C.rmode_t)(mode), cgoAllocsUnknown
	__ret := C.rig_passband_normal(crig, cmode)
	__v := (int)(__ret)
	return __v
}

// RigPassbandNarrow function as declared in hamlib/rig.h:1693
func RigPassbandNarrow(rig *Rig, mode Rmode) int {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cmode, _ := (C.rmode_t)(mode), cgoAllocsUnknown
	__ret := C.rig_passband_narrow(crig, cmode)
	__v := (int)(__ret)
	return __v
}

// RigPassbandWide function as declared in hamlib/rig.h:1694
func RigPassbandWide(rig *Rig, mode Rmode) int {
	crig, _ := (*C.RIG)(unsafe.Pointer(rig)), cgoAllocsUnknown
	cmode, _ := (C.rmode_t)(mode), cgoAllocsUnknown
	__ret := C.rig_passband_wide(crig, cmode)
	__v := (int)(__ret)
	return __v
}

// Rigerror function as declared in hamlib/rig.h:1696
func Rigerror(errnum int32) string {
	cerrnum, _ := (C.int)(errnum), cgoAllocsUnknown
	__ret := C.rigerror(cerrnum)
	__v := packPCharString(__ret)
	return __v
}

// RigSetting2idx function as declared in hamlib/rig.h:1698
func RigSetting2idx(s uint) int32 {
	cs, _ := (C.setting_t)(s), cgoAllocsUnknown
	__ret := C.rig_setting2idx(cs)
	__v := (int32)(__ret)
	return __v
}

// RigSetDebug function as declared in hamlib/rig.h:1705
func RigSetDebug(debugLevel RigDebugLevelE) {
	cdebugLevel, _ := (C.enum_rig_debug_level_e)(debugLevel), cgoAllocsUnknown
	C.rig_set_debug(cdebugLevel)
}

// RigNeedDebug function as declared in hamlib/rig.h:1707
func RigNeedDebug(debugLevel RigDebugLevelE) int32 {
	cdebugLevel, _ := (C.enum_rig_debug_level_e)(debugLevel), cgoAllocsUnknown
	__ret := C.rig_need_debug(cdebugLevel)
	__v := (int32)(__ret)
	return __v
}

// RigRegister function as declared in hamlib/rig.h:1712
func RigRegister(caps *RigCaps) int32 {
	ccaps, _ := (*C.struct_rig_caps)(unsafe.Pointer(caps)), cgoAllocsUnknown
	__ret := C.rig_register(ccaps)
	__v := (int32)(__ret)
	return __v
}

// RigUnregister function as declared in hamlib/rig.h:1713
func RigUnregister(rigModel RigModel) int32 {
	crigModel, _ := (C.rig_model_t)(rigModel), cgoAllocsUnknown
	__ret := C.rig_unregister(crigModel)
	__v := (int32)(__ret)
	return __v
}

// RigLoadBackend function as declared in hamlib/rig.h:1715
func RigLoadBackend(beName string) int32 {
	cbeName, _ := unpackPCharString(beName)
	__ret := C.rig_load_backend(cbeName)
	__v := (int32)(__ret)
	return __v
}

// RigCheckBackend function as declared in hamlib/rig.h:1716
func RigCheckBackend(rigModel RigModel) int32 {
	crigModel, _ := (C.rig_model_t)(rigModel), cgoAllocsUnknown
	__ret := C.rig_check_backend(crigModel)
	__v := (int32)(__ret)
	return __v
}

// RigLoadAllBackends function as declared in hamlib/rig.h:1717
func RigLoadAllBackends() int32 {
	__ret := C.rig_load_all_backends()
	__v := (int32)(__ret)
	return __v
}

// RigProbeAll function as declared in hamlib/rig.h:1720
func RigProbeAll(p *Port, arg1 RigProbeFunc, arg2 unsafe.Pointer) int32 {
	cp, _ := (*C.hamlib_port_t)(unsafe.Pointer(p)), cgoAllocsUnknown
	carg1, _ := (*[0]byte)(unsafe.Pointer(&arg1)), cgoAllocsUnknown
	carg2, _ := (unsafe.Pointer)(unsafe.Pointer(arg2)), cgoAllocsUnknown
	__ret := C.rig_probe_all(cp, carg1, carg2)
	__v := (int32)(__ret)
	return __v
}

// RigProbe function as declared in hamlib/rig.h:1721
func RigProbe(p *Port) RigModel {
	cp, _ := (*C.hamlib_port_t)(unsafe.Pointer(p)), cgoAllocsUnknown
	__ret := C.rig_probe(cp)
	__v := (RigModel)(__ret)
	return __v
}

// RigStrrmode function as declared in hamlib/rig.h:1725
func RigStrrmode(mode Rmode) string {
	cmode, _ := (C.rmode_t)(mode), cgoAllocsUnknown
	__ret := C.rig_strrmode(cmode)
	__v := packPCharString(__ret)
	return __v
}

// RigStrvfo function as declared in hamlib/rig.h:1726
func RigStrvfo(vfo int32) string {
	cvfo, _ := (C.vfo_t)(vfo), cgoAllocsUnknown
	__ret := C.rig_strvfo(cvfo)
	__v := packPCharString(__ret)
	return __v
}

// RigStrfunc function as declared in hamlib/rig.h:1727
func RigStrfunc(arg0 uint) string {
	carg0, _ := (C.setting_t)(arg0), cgoAllocsUnknown
	__ret := C.rig_strfunc(carg0)
	__v := packPCharString(__ret)
	return __v
}

// RigStrlevel function as declared in hamlib/rig.h:1728
func RigStrlevel(arg0 uint) string {
	carg0, _ := (C.setting_t)(arg0), cgoAllocsUnknown
	__ret := C.rig_strlevel(carg0)
	__v := packPCharString(__ret)
	return __v
}

// RigStrparm function as declared in hamlib/rig.h:1729
func RigStrparm(arg0 uint) string {
	carg0, _ := (C.setting_t)(arg0), cgoAllocsUnknown
	__ret := C.rig_strparm(carg0)
	__v := packPCharString(__ret)
	return __v
}

// RigStrptrshift function as declared in hamlib/rig.h:1730
func RigStrptrshift(arg0 RptrShift) string {
	carg0, _ := (C.rptr_shift_t)(arg0), cgoAllocsUnknown
	__ret := C.rig_strptrshift(carg0)
	__v := packPCharString(__ret)
	return __v
}

// RigStrvfop function as declared in hamlib/rig.h:1731
func RigStrvfop(op VfoOp) string {
	cop, _ := (C.vfo_op_t)(op), cgoAllocsUnknown
	__ret := C.rig_strvfop(cop)
	__v := packPCharString(__ret)
	return __v
}

// RigStrscan function as declared in hamlib/rig.h:1732
func RigStrscan(scan Scan) string {
	cscan, _ := (C.scan_t)(scan), cgoAllocsUnknown
	__ret := C.rig_strscan(cscan)
	__v := packPCharString(__ret)
	return __v
}

// RigStrstatus function as declared in hamlib/rig.h:1733
func RigStrstatus(status RigStatusE) string {
	cstatus, _ := (C.enum_rig_status_e)(status), cgoAllocsUnknown
	__ret := C.rig_strstatus(cstatus)
	__v := packPCharString(__ret)
	return __v
}

// RigStrmtype function as declared in hamlib/rig.h:1734
func RigStrmtype(mtype ChanType) string {
	cmtype, _ := (C.chan_type_t)(mtype), cgoAllocsUnknown
	__ret := C.rig_strmtype(cmtype)
	__v := packPCharString(__ret)
	return __v
}

// RigParseMode function as declared in hamlib/rig.h:1736
func RigParseMode(s string) Rmode {
	cs, _ := unpackPCharString(s)
	__ret := C.rig_parse_mode(cs)
	__v := (Rmode)(__ret)
	return __v
}

// RigParseVfo function as declared in hamlib/rig.h:1737
func RigParseVfo(s string) int32 {
	cs, _ := unpackPCharString(s)
	__ret := C.rig_parse_vfo(cs)
	__v := (int32)(__ret)
	return __v
}

// RigParseFunc function as declared in hamlib/rig.h:1738
func RigParseFunc(s string) uint {
	cs, _ := unpackPCharString(s)
	__ret := C.rig_parse_func(cs)
	__v := (uint)(__ret)
	return __v
}

// RigParseLevel function as declared in hamlib/rig.h:1739
func RigParseLevel(s string) uint {
	cs, _ := unpackPCharString(s)
	__ret := C.rig_parse_level(cs)
	__v := (uint)(__ret)
	return __v
}

// RigParseParm function as declared in hamlib/rig.h:1740
func RigParseParm(s string) uint {
	cs, _ := unpackPCharString(s)
	__ret := C.rig_parse_parm(cs)
	__v := (uint)(__ret)
	return __v
}

// RigParseVfoOp function as declared in hamlib/rig.h:1741
func RigParseVfoOp(s string) VfoOp {
	cs, _ := unpackPCharString(s)
	__ret := C.rig_parse_vfo_op(cs)
	__v := (VfoOp)(__ret)
	return __v
}

// RigParseScan function as declared in hamlib/rig.h:1742
func RigParseScan(s string) Scan {
	cs, _ := unpackPCharString(s)
	__ret := C.rig_parse_scan(cs)
	__v := (Scan)(__ret)
	return __v
}

// RigParseRptrShift function as declared in hamlib/rig.h:1743
func RigParseRptrShift(s string) RptrShift {
	cs, _ := unpackPCharString(s)
	__ret := C.rig_parse_rptr_shift(cs)
	__v := (RptrShift)(__ret)
	return __v
}

// RigParseMtype function as declared in hamlib/rig.h:1744
func RigParseMtype(s string) ChanType {
	cs, _ := unpackPCharString(s)
	__ret := C.rig_parse_mtype(cs)
	__v := (ChanType)(__ret)
	return __v
}
